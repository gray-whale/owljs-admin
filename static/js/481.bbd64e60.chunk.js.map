{"version":3,"file":"static/js/481.bbd64e60.chunk.js","mappings":"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","sources":["api/modules/web/jserror.ts","components/FilterHeader/index.tsx","views/web/js/dashboard/jsErrorList/index.tsx","views/web/js/dashboard/pageList/index.tsx","views/web/js/dashboard/errorInfoList/index.tsx","views/web/js/dashboard/index.tsx"],"sourcesContent":["import { ResJSError } from \"@/api/interface/web/jserror\";\nimport http from \"../../index\"\nimport { ReqPage, ResPage } from \"../../interface\";\n\n// 获取错误列表\nexport const getJSErrorList = (params: ReqPage) => {\n    return http.get<ResPage<ResJSError>>('web/jserror', params);\n};","import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { getJSErrorList } from \"@/api/modules/web/jserror\";\nimport { Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\n\ninterface DataType {\n    key: React.Key;\n    content: string;\n    time: string;\n    errorCount: number;\n    userCount: number;\n}\n\ntype JSErrorListProps = {\n    onClick: (e: any) => void;\n};\n\nconst JSErrorList: React.FC<JSErrorListProps> = (props: JSErrorListProps) => {\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [errorTotal, setErrorTotal] = useState(0);\n    const [errorList, setErrorList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误内容',\n            dataIndex: 'content',\n            width: 200,\n            render: (text) => <div><span onClick={props.onClick} style={{ width: '200px', wordBreak: 'break-all' }}>{text}</span></div>,\n        },\n        {\n            title: '起止时间',\n            dataIndex: 'time',\n            width: 200,\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n            width: 50,\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n            width: 50,\n        },\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initJSErrorList = async () => {\n        const result = await getJSErrorList({ pageNum, pageSize });\n        if (result.data) {\n            setErrorTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.errorId,\n                    content: item.stack,\n                    time: '2020/12/09',\n                    errorCount: 5,\n                    userCount: 6,\n                })\n            });\n            setErrorList(data);\n        }\n    };\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize])\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: errorTotal\n    }\n\n    return (<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={errorList} />);\n}\n\nexport default JSErrorList;","import { Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useState } from \"react\";\n\ninterface DataType {\n    key: React.Key;\n    pid: string;\n    errorCount: number;\n    userCount: number;\n}\n\nconst PageList: React.FC = (props:any) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: 'PID',\n            dataIndex: 'pid',\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n        },\n    ];\n\n    const data: DataType[] = [];\n    for (let i = 0; i < 10; i++) {\n        data.push({\n            key: i,\n            pid: 'script error',\n            errorCount: 5,\n            userCount: 6,\n        })\n    }\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={false} columns={columns} dataSource={data} />);\n}\n\nexport default PageList;","import { Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useState } from \"react\";\n\ninterface DataType {\n    key: React.Key;\n    content: string;\n    errorCount: number;\n    userCount: number;\n}\n\nconst ErrorInfoList: React.FC = (props:any) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误内容',\n            dataIndex: 'content',\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n        },\n    ];\n\n    const data: DataType[] = [];\n    for (let i = 0; i < 10; i++) {\n        data.push({\n            key: i,\n            content: 'script error',\n            errorCount: 5,\n            userCount: 6,\n        })\n    }\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={false} columns={columns} dataSource={data} />);\n}\n\nexport default ErrorInfoList;","import FilterHeader from \"@/components/FilterHeader\";\nimport { Card, Drawer, Radio, RadioChangeEvent, Space } from \"antd\";\nimport { useState } from \"react\";\nimport JSErrorList from \"./jsErrorList\";\nimport PageList from \"./pageList\";\nimport ErrorInfoList from \"./errorInfoList\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nenum ErrorCategory {\n    JSErrorList,\n    PageList,\n    ErrorInfoList\n}\n\nconst View: React.FC = () => {\n    const [category, setCategory] = useState<ErrorCategory>(ErrorCategory.JSErrorList);\n    const [open, setOpen] = useState(false);\n    const changeCategory = (e: RadioChangeEvent) => {\n        setCategory(e.target.value);\n    }\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const showDrawer = () => {\n        setOpen(true);\n      };\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card title=\"错误及页面列表\" style={{ marginTop: '16px' }}>\n            <Radio.Group defaultValue={ErrorCategory.JSErrorList} buttonStyle=\"solid\" onChange={changeCategory}>\n                <Radio.Button value={ErrorCategory.JSErrorList}>JS错误列表</Radio.Button>\n                <Radio.Button value={ErrorCategory.PageList}>页面列表</Radio.Button>\n                <Radio.Button value={ErrorCategory.ErrorInfoList}>错误信息列表</Radio.Button>\n            </Radio.Group>\n            {category === ErrorCategory.JSErrorList && <JSErrorList onClick={showDrawer}></JSErrorList>}\n            {category === ErrorCategory.PageList && <PageList></PageList>}\n            {category === ErrorCategory.ErrorInfoList && <ErrorInfoList></ErrorInfoList>}\n        </Card>\n        <Drawer\n            title=\"错误信息标题\"\n            placement='right'\n            closable={false}\n            width='80%'\n            onClose={onClose}\n            open={open}\n            extra={\n                <Space>\n                    <CloseOutlined onClick={onClose} />\n                </Space>\n            }\n        >\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n        </Drawer>\n    </div>);\n}\n\nexport default View;"],"names":["getJSErrorList","params","http","get","RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","props","_useState","useState","_useState2","_slicedToArray","pageNum","setPageNum","_useState3","_useState4","pageSize","setPageSize","_useState5","_useState6","errorTotal","setErrorTotal","_useState7","_useState8","errorList","setErrorList","_useState9","_useState10","selectedRowKeys","setSelectedRowKeys","columns","title","dataIndex","width","render","text","onClick","wordBreak","rowSelection","newSelectedRowKeys","initJSErrorList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","sent","total","forEach","push","key","errorId","stack","time","errorCount","userCount","stop","apply","arguments","useEffect","pagination","showSizeChanger","page","defaultCurrent","Table","marginTop","dataSource","i","pid","ErrorCategory","JSErrorList","category","setCategory","open","setOpen","onClose","FilterHeader","Radio","buttonStyle","e","target","PageList","ErrorInfoList","Drawer","closable","extra","Space","CloseOutlined"],"sourceRoot":""}