{"version":3,"file":"static/js/7120.af782d0b.chunk.js","mappings":"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","sources":["components/FilterHeader/index.tsx","views/web/version/index.tsx","api/modules/web/version.ts"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { getVersionList } from \"@/api/modules/web/version\";\nimport FilterHeader from \"@/components/FilterHeader\";\nimport { Button, Card, Table, Tag, message } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\ninterface DataType {\n    key: React.Key;\n    appId: string;\n    release: string;\n    env: string;\n    createdAt: string;\n}\n\nconst View: React.FC = () => {\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [versionTotal, setVersionTotal] = useState(0);\n    const [eventList, setEventList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n    const [searchParams] = useSearchParams();\n    const [messageApi] = message.useMessage();\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '版本',\n            width: 100,\n            render: (_: any, record: DataType) => (<div style={{ display: 'flex', flexDirection: 'row',alignItems:'center' }}>\n                <Tag color=\"blue\">{record.release}</Tag>&nbsp;&nbsp;|&nbsp;&nbsp;{record.env}\n            </div>),\n        },\n        {\n            title: '上线时间',\n            dataIndex: 'createdAt',\n            width: 200,\n        },\n        {\n            title: '操作',\n            width: 200,\n            render: (_, record:DataType) => (\n                <Button type=\"link\">详情</Button>\n            ),\n        },\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initVersionList = async () => {\n        const appId = searchParams.get('appId');\n        if (!appId) {\n            messageApi.open({\n                type: 'error',\n                content: 'appId不能为空!',\n            });\n            return;\n        }\n        const result = await getVersionList({ pageNum, pageSize, appId });\n        if (result.data) {\n            setVersionTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.versionId,\n                    appId: item.appId,\n                    release: item.release,\n                    env: item.env,\n                    createdAt: item.createdAt\n                })\n            });\n            setEventList(data);\n        }\n    };\n\n    useEffect(() => {\n        initVersionList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        initVersionList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize]);\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: versionTotal\n    }\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card title=\"版本列表\" style={{ marginTop: '16px' }}>\n            <Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={eventList} />\n        </Card>\n    </div>);\n}\n\nexport default View;","import http from \"../../index\"\nimport { ResPage } from \"../../interface\";\nimport { ReqQuery, ResVersion } from \"@/api/interface/web/version\";\n\n\n// 获取版本列表\nexport const getVersionList = (params: ReqQuery) => {\n    return http.get<ResPage<ResVersion>>('web/version', params);\n};"],"names":["RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","onRangeChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","View","pageNum","setPageNum","useState","pageSize","setPageSize","versionTotal","setVersionTotal","eventList","setEventList","selectedRowKeys","setSelectedRowKeys","searchParams","useSearchParams","messageApi","message","useMessage","columns","title","width","render","_","record","display","flexDirection","alignItems","release","env","dataIndex","type","rowSelection","newSelectedRowKeys","initVersionList","async","appId","get","open","result","params","http","total","forEach","push","key","versionId","createdAt","useEffect","pagination","showSizeChanger","page","defaultCurrent","FilterHeader","marginTop","Table","dataSource"],"sourceRoot":""}