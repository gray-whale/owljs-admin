{"version":3,"file":"static/js/293.8cedc5e1.chunk.js","mappings":"uQAMQA,EAAgBC,EAAAA,EAAhBD,YA+CR,EA7CqB,SAAHE,GAAUA,EAAJC,KAAiB,IAE/BC,EAGA,CACE,CAAEC,MAAO,6BAAUC,MAAO,CAACC,MAAQC,KAAK,GAAI,UAAWD,QACvD,CAAEF,MAAO,4BAASC,MAAO,CAACC,MAAQC,KAAK,EAAG,KAAMD,QAChD,CAAEF,MAAO,4BAASC,MAAO,CAACC,MAAQC,KAAK,EAAG,KAAMD,QAChD,CAAEF,MAAO,sBAAQC,MAAO,CAACC,MAAQC,KAAK,EAAG,KAAMD,QAC/C,CAAEF,MAAO,sBAAQC,MAAO,CAACC,MAAQC,KAAK,EAAG,KAAMD,QAC/C,CAAEF,MAAO,sBAAQC,MAAO,CAACC,MAAQC,KAAK,EAAG,KAAMD,QAC/C,CAAEF,MAAO,4BAASC,MAAO,CAACC,MAAQC,KAAK,EAAG,KAAMD,SAclDE,GACFC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,SAAUC,SAHtB,CAAC,MAAO,qBAAO,iCAAS,eAAM,2BAAQ,4BAAS,eAAM,eAAM,KAAM,eAAM,eAAM,kBAAS,aAAc,UAAW,MAAO,UAAW,YAAa,2BAAQ,2BAAQ,SAAU,aAKpKC,KAAI,SAAAC,GAAU,OAAQL,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAAYC,MAAM,OAAOC,UAAU,oBAAmBL,SAAEE,GAAlDA,EAA+D,MAInH,OACII,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAP,SAAA,EACDH,EAAAA,EAAAA,KAACV,EAAW,CAACqB,UAAQ,EAACC,QAASlB,EAAcmB,SApB/B,SAACC,EAAgCC,GAC/CD,GACAE,QAAQC,IAAI,SAAUH,EAAM,GAAI,SAAUA,EAAM,IAChDE,QAAQC,IAAI,SAAUF,EAAY,GAAI,SAAUA,EAAY,KAE5DC,QAAQC,IAAI,QAEpB,EAa8EC,aAAc,CAACrB,MAAQC,KAAK,EAAG,KAAMD,UAG3GG,EAAAA,EAAAA,KAACmB,EAAAA,EAAO,CAACC,UAAU,aAAaC,QAAQ,QAAQtB,QAASA,EAASuB,OAAO,EAAMnB,UAC3EH,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAACC,MAAMxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,IAAKxB,MAAO,CAAEyB,WAAY,OAAQvB,SAAC,iCAI9E,E,iDCYA,EA/CgD,SAACwB,GAwB7C,IAvBA,IAAAC,GAA8CC,EAAAA,EAAAA,UAAsB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAEpCI,EAAiC,CACnC,CACIC,MAAO,2BACPC,UAAW,UACXC,OAAQ,SAACC,GAAI,OAAKtC,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAACgB,KAAK,OAAOC,QAASb,EAAMa,QAAQrC,SAAEmC,GAAc,GAEjF,CACIH,MAAO,2BACPC,UAAW,QAEf,CACID,MAAO,qBACPC,UAAW,cAEf,CACID,MAAO,iCACPC,UAAW,cAIb3C,EAAmB,GAChBgD,EAAI,EAAGA,EAAI,GAAIA,IACpBhD,EAAKiD,KAAK,CACNC,IAAKF,EACL1C,QAAS,eACT6C,KAAM,aACNC,WAAY,EACZC,UAAW,IAInB,IAKMC,EAAe,CACjBf,gBAAAA,EACAnB,SAPmB,SAACmC,GACpBhC,QAAQC,IAAI,4BAA6B+B,GACzCf,EAAmBe,EACvB,GAOA,OAAQhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CAAChD,MAAO,CAAEiD,UAAW,QAAUH,aAAcA,EAAcI,YAAY,EAAOjB,QAASA,EAASkB,WAAY3D,GAC9H,ECTA,EAzC2B,SAACkC,GAmBxB,IAlBA,IAAAC,GAA8CC,EAAAA,EAAAA,UAAsB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAiBpCrC,EAAmB,GAChBgD,EAAI,EAAGA,EAAI,GAAIA,IACpBhD,EAAKiD,KAAK,CACNC,IAAKF,EACLY,IAAK,eACLR,WAAY,EACZC,UAAW,IAInB,IAKMC,EAAe,CACjBf,gBAAAA,EACAnB,SAPmB,SAACmC,GACpBhC,QAAQC,IAAI,4BAA6B+B,GACzCf,EAAmBe,EACvB,GAOA,OAAQhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CAAChD,MAAO,CAAEiD,UAAW,QAAUH,aAAcA,EAAcI,YAAY,EAAOjB,QAnCrD,CACnC,CACIC,MAAO,MACPC,UAAW,OAEf,CACID,MAAO,qBACPC,UAAW,cAEf,CACID,MAAO,iCACPC,UAAW,cAwB2FgB,WAAY3D,GAC9H,ECEA,EAzCgC,SAACkC,GAmB7B,IAlBA,IAAAC,GAA8CC,EAAAA,EAAAA,UAAsB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAiBpCrC,EAAmB,GAChBgD,EAAI,EAAGA,EAAI,GAAIA,IACpBhD,EAAKiD,KAAK,CACNC,IAAKF,EACL1C,QAAS,eACT8C,WAAY,EACZC,UAAW,IAInB,IAKMC,EAAe,CACjBf,gBAAAA,EACAnB,SAPmB,SAACmC,GACpBhC,QAAQC,IAAI,4BAA6B+B,GACzCf,EAAmBe,EACvB,GAOA,OAAQhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CAAChD,MAAO,CAAEiD,UAAW,QAAUH,aAAcA,EAAcI,YAAY,EAAOjB,QAnCrD,CACnC,CACIC,MAAO,2BACPC,UAAW,WAEf,CACID,MAAO,qBACPC,UAAW,cAEf,CACID,MAAO,iCACPC,UAAW,cAwB2FgB,WAAY3D,GAC9H,E,SC1CK6D,EAAa,SAAbA,GAAa,OAAbA,EAAAA,EAAa,6BAAbA,EAAAA,EAAa,uBAAbA,EAAAA,EAAa,iCAAbA,CAAa,EAAbA,GAAa,IAqDlB,EA/CuB,WACnB,IAAA1B,GAAgCC,EAAAA,EAAAA,UAAwByB,EAAcC,aAAYzB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3E4B,EAAQ1B,EAAA,GAAE2B,EAAW3B,EAAA,GAC5B4B,GAAwB7B,EAAAA,EAAAA,WAAS,GAAM8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAKdG,EAAU,WACZD,GAAQ,EACZ,EAMA,OAAQpD,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACJH,EAAAA,EAAAA,KAAC+D,EAAY,KACbtD,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACyB,MAAM,6CAAUlC,MAAO,CAAEiD,UAAW,QAAS/C,SAAA,EAC/CM,EAAAA,EAAAA,MAACuD,EAAAA,GAAAA,MAAW,CAAC9C,aAAcoC,EAAcC,YAAaU,YAAY,QAAQpD,SAf3D,SAACqD,GACpBT,EAAYS,EAAEC,OAAOvE,MACzB,EAa2GO,SAAA,EAC/FH,EAAAA,EAAAA,KAACgE,EAAAA,GAAAA,OAAY,CAACpE,MAAO0D,EAAcC,YAAYpD,SAAC,gCAChDH,EAAAA,EAAAA,KAACgE,EAAAA,GAAAA,OAAY,CAACpE,MAAO0D,EAAcc,SAASjE,SAAC,8BAC7CH,EAAAA,EAAAA,KAACgE,EAAAA,GAAAA,OAAY,CAACpE,MAAO0D,EAAce,cAAclE,SAAC,4CAErDqD,IAAaF,EAAcC,cAAevD,EAAAA,EAAAA,KAACuD,EAAW,CAACf,QAZ7C,WACfqB,GAAQ,EACV,IAWOL,IAAaF,EAAcc,WAAYpE,EAAAA,EAAAA,KAACoE,EAAQ,IAChDZ,IAAaF,EAAce,gBAAiBrE,EAAAA,EAAAA,KAACqE,EAAa,QAE/D5D,EAAAA,EAAAA,MAAC6D,EAAAA,EAAM,CACHnC,MAAM,uCACNf,UAAU,QACVmD,UAAU,EACVC,MAAM,MACNV,QAASA,EACTF,KAAMA,EACNa,OACIzE,EAAAA,EAAAA,KAAC0E,EAAAA,EAAK,CAAAvE,UACFH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAa,CAACnC,QAASsB,MAE/B3D,SAAA,EAEDH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,sBACHH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,sBACHH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,0BAGf,C","sources":["components/FilterHeader/index.tsx","views/web/js/dashboard/jsErrorList/index.tsx","views/web/js/dashboard/pageList/index.tsx","views/web/js/dashboard/errorInfoList/index.tsx","views/web/js/dashboard/index.tsx"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { Button, Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useState } from \"react\";\n\ninterface DataType {\n    key: React.Key;\n    content: string;\n    time: string;\n    errorCount: number;\n    userCount: number;\n}\n\ntype JSErrorListProps = {\n    onClick: (e: any) => void;\n};\n\nconst JSErrorList: React.FC<JSErrorListProps> = (props: JSErrorListProps) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误内容',\n            dataIndex: 'content',\n            render: (text) => <Button type=\"link\" onClick={props.onClick}>{text}</Button>,\n        },\n        {\n            title: '起止时间',\n            dataIndex: 'time',\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n        },\n    ];\n\n    const data: DataType[] = [];\n    for (let i = 0; i < 10; i++) {\n        data.push({\n            key: i,\n            content: 'script error',\n            time: '2020/12/09',\n            errorCount: 5,\n            userCount: 6,\n        })\n    }\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={false} columns={columns} dataSource={data} />);\n}\n\nexport default JSErrorList;","import { Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useState } from \"react\";\n\ninterface DataType {\n    key: React.Key;\n    pid: string;\n    errorCount: number;\n    userCount: number;\n}\n\nconst PageList: React.FC = (props:any) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: 'PID',\n            dataIndex: 'pid',\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n        },\n    ];\n\n    const data: DataType[] = [];\n    for (let i = 0; i < 10; i++) {\n        data.push({\n            key: i,\n            pid: 'script error',\n            errorCount: 5,\n            userCount: 6,\n        })\n    }\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={false} columns={columns} dataSource={data} />);\n}\n\nexport default PageList;","import { Table } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useState } from \"react\";\n\ninterface DataType {\n    key: React.Key;\n    content: string;\n    errorCount: number;\n    userCount: number;\n}\n\nconst ErrorInfoList: React.FC = (props:any) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误内容',\n            dataIndex: 'content',\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n        },\n    ];\n\n    const data: DataType[] = [];\n    for (let i = 0; i < 10; i++) {\n        data.push({\n            key: i,\n            content: 'script error',\n            errorCount: 5,\n            userCount: 6,\n        })\n    }\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        console.log('selectedRowKeys changed: ', newSelectedRowKeys);\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return (<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={false} columns={columns} dataSource={data} />);\n}\n\nexport default ErrorInfoList;","import FilterHeader from \"@/components/FilterHeader\";\nimport { Card, Drawer, Radio, RadioChangeEvent, Space } from \"antd\";\nimport { useState } from \"react\";\nimport JSErrorList from \"./jsErrorList\";\nimport PageList from \"./pageList\";\nimport ErrorInfoList from \"./errorInfoList\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nenum ErrorCategory {\n    JSErrorList,\n    PageList,\n    ErrorInfoList\n}\n\nconst View: React.FC = () => {\n    const [category, setCategory] = useState<ErrorCategory>(ErrorCategory.JSErrorList);\n    const [open, setOpen] = useState(false);\n    const changeCategory = (e: RadioChangeEvent) => {\n        setCategory(e.target.value);\n    }\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const showDrawer = () => {\n        setOpen(true);\n      };\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card title=\"错误及页面列表\" style={{ marginTop: '16px' }}>\n            <Radio.Group defaultValue={ErrorCategory.JSErrorList} buttonStyle=\"solid\" onChange={changeCategory}>\n                <Radio.Button value={ErrorCategory.JSErrorList}>JS错误列表</Radio.Button>\n                <Radio.Button value={ErrorCategory.PageList}>页面列表</Radio.Button>\n                <Radio.Button value={ErrorCategory.ErrorInfoList}>错误信息列表</Radio.Button>\n            </Radio.Group>\n            {category === ErrorCategory.JSErrorList && <JSErrorList onClick={showDrawer}></JSErrorList>}\n            {category === ErrorCategory.PageList && <PageList></PageList>}\n            {category === ErrorCategory.ErrorInfoList && <ErrorInfoList></ErrorInfoList>}\n        </Card>\n        <Drawer\n            title=\"错误信息标题\"\n            placement='right'\n            closable={false}\n            width='80%'\n            onClose={onClose}\n            open={open}\n            extra={\n                <Space>\n                    <CloseOutlined onClick={onClose} />\n                </Space>\n            }\n        >\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n        </Drawer>\n    </div>);\n}\n\nexport default View;"],"names":["RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","props","_useState","useState","_useState2","_slicedToArray","selectedRowKeys","setSelectedRowKeys","columns","title","dataIndex","render","text","type","onClick","i","push","key","time","errorCount","userCount","rowSelection","newSelectedRowKeys","Table","marginTop","pagination","dataSource","pid","ErrorCategory","JSErrorList","category","setCategory","_useState3","_useState4","open","setOpen","onClose","FilterHeader","Radio","buttonStyle","e","target","PageList","ErrorInfoList","Drawer","closable","width","extra","Space","CloseOutlined"],"sourceRoot":""}