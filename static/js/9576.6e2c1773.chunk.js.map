{"version":3,"file":"static/js/9576.6e2c1773.chunk.js","mappings":"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","sources":["components/FilterHeader/index.tsx","views/miniapp/js/dashboard/jsErrorList/index.tsx","api/modules/miniapp/jserror.ts","api/modules/miniapp/breadcrumb.ts","views/miniapp/js/dashboard/index.tsx"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { getJSErrorList } from \"@/api/modules/miniapp/jserror\";\nimport { Table, message } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport Link from \"antd/es/typography/Link\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\ninterface DataType {\n    key: React.Key;\n    name: string;\n    msg: string;\n    stack: string;\n    createdAt: string;\n}\n\ntype JSErrorListProps = {\n    onClick: (e: any) => void;\n};\n\nconst JSErrorList: React.FC<JSErrorListProps> = (props: JSErrorListProps) => {\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [errorTotal, setErrorTotal] = useState(0);\n    const [errorList, setErrorList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n    const [searchParams] = useSearchParams();\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误名',\n            dataIndex: 'name',\n            width: 50,\n            render: (text,record) => <div><Link onClick={e => props.onClick(record.key as string)}>{text}</Link></div>,\n        },\n        {\n            title: '错误信息',\n            dataIndex: 'msg',\n            width: 100,\n        },\n        {\n            title: '错误内容',\n            dataIndex: 'stack',\n            width: 200,\n            render: (text,record) => <div><span onClick={e => props.onClick(record.key as string)} style={{ wordBreak: 'break-all', overflow: 'hidden', textOverflow: 'ellipsis', display: '-webkit-box', WebkitLineClamp: '3', WebkitBoxOrient: 'vertical' }}>{text}</span></div>,\n        },\n        {\n            title: '上报时间',\n            dataIndex: 'createdAt',\n            width: 100,\n        },\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initJSErrorList = async () => {\n        const appId = searchParams.get('appId');\n        if (!appId) {\n            messageApi.open({\n                type: 'error',\n                content: 'appId不能为空!',\n            });\n            return;\n        }\n        const result = await getJSErrorList({ pageNum, pageSize, appId });\n        if (result.data) {\n            setErrorTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.errorId,\n                    name: item.name,\n                    msg: item.msg,\n                    stack: item.stack,\n                    createdAt: item.createdAt,\n                })\n            });\n            setErrorList(data);\n        }\n    };\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize])\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: errorTotal\n    }\n\n    return (<div>{contextHolder}<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={errorList} /></div>);\n}\n\nexport default JSErrorList;","import { ReqQuery, ResJSError } from \"@/api/interface/miniapp/jserror\";\nimport http from \"../../index\"\nimport { ResPage } from \"../../interface\";\n\n// 获取错误列表\nexport const getJSErrorList = (params: ReqQuery) => {\n    return http.get<ResPage<ResJSError>>('miniapp/jserror', params);\n};\n\n// 获取错误信息\nexport const getJSErrorInfo = (id: string) => {\n    return http.get<ResJSError>(`miniapp/jserror/${id}`);\n};","import { ReqQuery, ResBreadcrumb } from \"@/api/interface/miniapp/breadcrumb\";\nimport http from \"../../index\"\nimport { ResPage } from \"../../interface\";\n\n// 获取行为列表\nexport const getBreadcrumbList = (params: ReqQuery) => {\n    return http.get<ResPage<ResBreadcrumb>>('mp/breadcrumb', params);\n};","import FilterHeader from \"@/components/FilterHeader\";\nimport { Card, Collapse, CollapseProps, Divider, Drawer, Space, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport JSErrorList from \"./jsErrorList\";\nimport { ClockCircleOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport Title from \"antd/es/typography/Title\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport { ResJSError } from \"@/api/interface/miniapp/jserror\";\nimport { getJSErrorInfo } from \"@/api/modules/miniapp/jserror\";\nimport { getBreadcrumbList } from \"@/api/modules/miniapp/breadcrumb\";\nimport Table, { ColumnsType } from \"antd/es/table\";\n\ninterface BreadcrumbDataType {\n    type: string;\n    category: string;\n    message: string;\n    data: string;\n    timestamp: string;\n}\n\nconst JSErrorView: React.FC = () => {\n    const [jsErrorInfo, setJsErrorInfo] = useState<ResJSError>();\n    const [open, setOpen] = useState(false);\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [breadcrumbTotal, setBreadcrumbTotal] = useState(0);\n    const [breadcrumbList, setBreadcrumbList] = useState<BreadcrumbDataType[]>([]);\n\n    const breadcrumbColumns: ColumnsType<BreadcrumbDataType> = [\n        {\n            title: '类型',\n            dataIndex: 'type',\n            width: 50,\n        },\n        {\n            title: '策略',\n            dataIndex: 'category',\n            width: 100,\n        },\n        {\n            title: '信息',\n            dataIndex: 'message',\n            width: 200,\n            render: (text, record) => {\n                return <div>\n                    <span style={{ width: '200px', wordBreak: 'break-all' }}>{text}</span>\n                </div>\n            },\n        },\n        {\n            title: '附加信息',\n            dataIndex: 'data',\n            width: 100,\n        },\n        {\n            title: '上报时间',\n            dataIndex: 'timestamp',\n            width: 100,\n        },\n    ];\n\n    const initBreadcrumbList = async (errorId: string) => {\n        const result = await getBreadcrumbList({ pageNum, pageSize, errorId });\n        if (result.data) {\n            setBreadcrumbTotal(result.data.total);\n            const data: BreadcrumbDataType[] = [];\n            result.data.data.forEach((item: { type: any; category: any; message: any; data: any; timestamp: any; }) => {\n                data.push({\n                    type: item.type,\n                    category: item.category,\n                    message: item.message,\n                    data: item.data,\n                    timestamp: item.timestamp\n                })\n            });\n            setBreadcrumbList(data);\n        }\n    }\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const showDrawer = (key: string) => {\n        getJSError(key);\n        setOpen(true);\n    };\n    const items: CollapseProps['items'] = [\n        {\n            key: '1',\n            label: '堆栈明细',\n            children: <p>{jsErrorInfo && jsErrorInfo.stack}</p>,\n        },\n    ];\n\n    const getJSError = async (id: string) => {\n        const res = await getJSErrorInfo(id);\n        res.data && setJsErrorInfo(res.data);\n        initBreadcrumbList(id);\n    }\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: breadcrumbTotal\n    }\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card title=\"错误列表\" style={{ marginTop: '16px' }}>\n            <JSErrorList onClick={showDrawer}></JSErrorList>\n        </Card>\n        <Drawer\n            title=\"错误详情\"\n            placement='right'\n            closable={false}\n            width='80%'\n            onClose={onClose}\n            open={open}\n            extra={\n                <Space>\n                    <CloseOutlined onClick={onClose} />\n                </Space>\n            }\n        >\n            <div>\n                <Typography>\n                    <Title level={4}>{jsErrorInfo?.name}</Title>\n                    <Paragraph>\n                        {jsErrorInfo?.msg}\n                    </Paragraph>\n                    <Paragraph>\n                        <ClockCircleOutlined />&nbsp;&nbsp;{jsErrorInfo?.createdAt}\n                    </Paragraph>\n                </Typography>\n                <Divider />\n                <div style={{ width: '60%' }}>\n                    <Table style={{ marginTop: '12px' }} size=\"small\" pagination={pagination} columns={breadcrumbColumns} dataSource={breadcrumbList} />\n                    <Typography>\n                        <Title level={5}>Js错误堆栈</Title>\n                        <Paragraph>\n                            {jsErrorInfo?.msg}\n                        </Paragraph>\n                    </Typography>\n                    <Collapse bordered={false} items={items} defaultActiveKey={['1']} />\n                </div>\n            </div>\n        </Drawer>\n    </div>);\n}\n\nexport default JSErrorView;"],"names":["RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","onRangeChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","props","pageNum","setPageNum","useState","pageSize","setPageSize","errorTotal","setErrorTotal","errorList","setErrorList","selectedRowKeys","setSelectedRowKeys","searchParams","useSearchParams","messageApi","contextHolder","message","useMessage","columns","title","dataIndex","width","render","text","record","Link","onClick","e","key","wordBreak","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","rowSelection","newSelectedRowKeys","initJSErrorList","async","appId","get","open","type","result","params","http","total","forEach","push","errorId","name","msg","stack","createdAt","useEffect","pagination","showSizeChanger","page","defaultCurrent","Table","marginTop","dataSource","JSErrorView","jsErrorInfo","setJsErrorInfo","setOpen","breadcrumbTotal","setBreadcrumbTotal","breadcrumbList","setBreadcrumbList","breadcrumbColumns","initBreadcrumbList","category","timestamp","onClose","items","getJSError","res","id","concat","getJSErrorInfo","FilterHeader","JSErrorList","Drawer","closable","extra","Space","CloseOutlined","Typography","Title","level","Paragraph","ClockCircleOutlined","Divider","size","Collapse","bordered","defaultActiveKey"],"sourceRoot":""}