{"version":3,"file":"static/js/4017.6f4fb39b.chunk.js","mappings":"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","sources":["components/FilterHeader/index.tsx","views/web/common/pagelist/index.tsx","api/modules/web/page.ts"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { getPageList } from \"@/api/modules/web/page\";\nimport FilterHeader from \"@/components/FilterHeader\";\nimport { Card, message } from \"antd\";\nimport Table, { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\ninterface DataType {\n    key: React.Key;\n    pid: string;\n    source: string;\n}\n\nconst PageList = () => {\n\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [pageTotal, setPageTotal] = useState(0);\n    const [pageList, setPageList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n    const [searchParams] = useSearchParams();\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: 'PID',\n            dataIndex: 'pid',\n            width: 100,\n        },\n        {\n            title: 'source',\n            dataIndex: 'source',\n            width: 200,\n        }\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initPageList = async () => {\n        const appId = searchParams.get('appId');\n        if (!appId) {\n            messageApi.open({\n                type: 'error',\n                content: 'appId不能为空!',\n            });\n            return;\n        }\n        const result = await getPageList({ pageNum, pageSize, appId });\n        if (result.data) {\n            setPageTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.pageId,\n                    pid: item.pid,\n                    source: item.source,\n                })\n            });\n            setPageList(data);\n        }\n    };\n\n    useEffect(() => {\n        initPageList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        initPageList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize])\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: pageTotal\n    }\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card style={{ marginTop: '16px' }} title=\"页面列表\">{contextHolder}<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={pageList} /></Card>\n    </div>);\n}\n\nexport default PageList;","\nimport { ResPage } from \"@/api/interface\";\nimport http from \"../../index\"\nimport { ReqQuery, ResPageview } from \"@/api/interface/web/page\";\n\n// 获取页面列表\nexport const getPageList = (params: ReqQuery) => {\n    return http.get<ResPage<ResPageview>>('web/pageview', params);\n};"],"names":["RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","onRangeChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","PageList","pageNum","setPageNum","useState","pageSize","setPageSize","pageTotal","setPageTotal","pageList","setPageList","selectedRowKeys","setSelectedRowKeys","searchParams","useSearchParams","messageApi","contextHolder","message","useMessage","rowSelection","newSelectedRowKeys","initPageList","async","appId","get","open","type","result","params","http","total","forEach","push","key","pageId","pid","source","useEffect","pagination","showSizeChanger","page","defaultCurrent","FilterHeader","marginTop","title","Table","columns","dataIndex","width","dataSource"],"sourceRoot":""}