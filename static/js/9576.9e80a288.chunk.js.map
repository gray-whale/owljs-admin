{"version":3,"file":"static/js/9576.9e80a288.chunk.js","mappings":"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","sources":["components/FilterHeader/index.tsx","api/modules/miniapp/jserror.ts","views/miniapp/js/dashboard/jsErrorList/index.tsx","views/miniapp/js/dashboard/index.tsx","api/modules/miniapp/breadcrumb.ts"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { ReqQuery, ResJSError } from \"@/api/interface/miniapp/jserror\";\nimport http from \"../../index\"\nimport { ResPage } from \"../../interface\";\n\n// 获取错误列表\nexport const getJSErrorList = (params: ReqQuery) => {\n    return http.get<ResPage<ResJSError>>('miniapp/jserror', params);\n};\n\n// 获取错误信息\nexport const getJSErrorInfo = (id: string) => {\n    return http.get<ResJSError>(`miniapp/jserror/${id}`);\n};","import { getJSErrorList } from \"@/api/modules/miniapp/jserror\";\nimport { Table, message } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\ninterface DataType {\n    key: React.Key;\n    name: string;\n    msg: string;\n    stack: string;\n    createdAt: string;\n}\n\ntype JSErrorListProps = {\n    onClick: (e: any) => void;\n};\n\nconst JSErrorList: React.FC<JSErrorListProps> = (props: JSErrorListProps) => {\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [errorTotal, setErrorTotal] = useState(0);\n    const [errorList, setErrorList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n    const [searchParams] = useSearchParams();\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误名',\n            dataIndex: 'name',\n            width: 50,\n        },\n        {\n            title: '错误信息',\n            dataIndex: 'msg',\n            width: 100,\n        },\n        {\n            title: '错误内容',\n            dataIndex: 'stack',\n            width: 200,\n            render: (text,record) => <div><span onClick={e => props.onClick(record.key as string)} style={{ wordBreak: 'break-all', overflow: 'hidden', textOverflow: 'ellipsis', display: '-webkit-box', WebkitLineClamp: '3', WebkitBoxOrient: 'vertical' }}>{text}</span></div>,\n        },\n        {\n            title: '上报时间',\n            dataIndex: 'createdAt',\n            width: 100,\n        },\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initJSErrorList = async () => {\n        const appId = searchParams.get('appId');\n        if (!appId) {\n            messageApi.open({\n                type: 'error',\n                content: 'appId不能为空!',\n            });\n            return;\n        }\n        const result = await getJSErrorList({ pageNum, pageSize, appId });\n        if (result.data) {\n            setErrorTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.errorId,\n                    name: item.name,\n                    msg: item.msg,\n                    stack: item.stack,\n                    createdAt: item.createdAt,\n                })\n            });\n            setErrorList(data);\n        }\n    };\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize])\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: errorTotal\n    }\n\n    return (<div>{contextHolder}<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={errorList} /></div>);\n}\n\nexport default JSErrorList;","import FilterHeader from \"@/components/FilterHeader\";\nimport { Card, Collapse, CollapseProps, Divider, Drawer, Space, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport JSErrorList from \"./jsErrorList\";\nimport { ClockCircleOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport Title from \"antd/es/typography/Title\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport { ResJSError } from \"@/api/interface/miniapp/jserror\";\nimport { getJSErrorInfo } from \"@/api/modules/miniapp/jserror\";\nimport { getBreadcrumbList } from \"@/api/modules/miniapp/breadcrumb\";\nimport Table, { ColumnsType } from \"antd/es/table\";\n\ninterface BreadcrumbDataType {\n    type: string;\n    category: string;\n    message: string;\n    data: string;\n    timestamp: string;\n}\n\nconst View: React.FC = () => {\n    const [jsErrorInfo, setJsErrorInfo] = useState<ResJSError>();\n    const [open, setOpen] = useState(false);\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [breadcrumbTotal, setBreadcrumbTotal] = useState(0);\n    const [breadcrumbList, setBreadcrumbList] = useState<BreadcrumbDataType[]>([]);\n\n    const breadcrumbColumns: ColumnsType<BreadcrumbDataType> = [\n        {\n            title: '类型',\n            dataIndex: 'type',\n            width: 50,\n        },\n        {\n            title: '策略',\n            dataIndex: 'category',\n            width: 100,\n        },\n        {\n            title: '信息',\n            dataIndex: 'message',\n            width: 200,\n            render: (text, record) => {\n                return <div>\n                    <span style={{ width: '200px', wordBreak: 'break-all' }}>{text}</span>\n                </div>\n            },\n        },\n        {\n            title: '附加信息',\n            dataIndex: 'data',\n            width: 100,\n        },\n        {\n            title: '上报时间',\n            dataIndex: 'timestamp',\n            width: 100,\n        },\n    ];\n\n    const initBreadcrumbList = async (errorId: string) => {\n        const result = await getBreadcrumbList({ pageNum, pageSize, errorId });\n        if (result.data) {\n            setBreadcrumbTotal(result.data.total);\n            const data: BreadcrumbDataType[] = [];\n            result.data.data.forEach((item: { type: any; category: any; message: any; data: any; timestamp: any; }) => {\n                data.push({\n                    type: item.type,\n                    category: item.category,\n                    message: item.message,\n                    data: item.data,\n                    timestamp: item.timestamp\n                })\n            });\n            setBreadcrumbList(data);\n        }\n    }\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const showDrawer = (key: string) => {\n        getJSError(key);\n        setOpen(true);\n    };\n    const items: CollapseProps['items'] = [\n        {\n            key: '1',\n            label: '堆栈明细',\n            children: <p>{jsErrorInfo && jsErrorInfo.stack}</p>,\n        },\n    ];\n\n    const getJSError = async (id: string) => {\n        const res = await getJSErrorInfo(id);\n        res.data && setJsErrorInfo(res.data);\n        initBreadcrumbList(id);\n    }\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: breadcrumbTotal\n    }\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card title=\"错误列表\" style={{ marginTop: '16px' }}>\n            <JSErrorList onClick={showDrawer}></JSErrorList>\n        </Card>\n        <Drawer\n            title=\"错误详情\"\n            placement='right'\n            closable={false}\n            width='80%'\n            onClose={onClose}\n            open={open}\n            extra={\n                <Space>\n                    <CloseOutlined onClick={onClose} />\n                </Space>\n            }\n        >\n            <div>\n                <Typography>\n                    <Title level={4}>{jsErrorInfo?.name}</Title>\n                    <Paragraph>\n                        {jsErrorInfo?.msg}\n                    </Paragraph>\n                    <Paragraph>\n                        <ClockCircleOutlined />&nbsp;&nbsp;{jsErrorInfo?.createdAt}\n                    </Paragraph>\n                </Typography>\n                <Divider />\n                <div style={{ width: '60%' }}>\n                    <Table style={{ marginTop: '12px' }} size=\"small\" pagination={pagination} columns={breadcrumbColumns} dataSource={breadcrumbList} />\n                    <Typography>\n                        <Title level={5}>Js错误堆栈</Title>\n                        <Paragraph>\n                            {jsErrorInfo?.msg}\n                        </Paragraph>\n                    </Typography>\n                    <Collapse bordered={false} items={items} defaultActiveKey={['1']} />\n                </div>\n            </div>\n        </Drawer>\n    </div>);\n}\n\nexport default View;","import { ReqQuery, ResBreadcrumb } from \"@/api/interface/web/breadcrumb\";\nimport http from \"../../index\"\nimport { ResPage } from \"../../interface\";\n\n// 获取行为列表\nexport const getBreadcrumbList = (params: ReqQuery) => {\n    return http.get<ResPage<ResBreadcrumb>>('mp/breadcrumb', params);\n};"],"names":["RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","getJSErrorInfo","id","http","get","concat","props","_useState","useState","_useState2","_slicedToArray","pageNum","setPageNum","_useState3","_useState4","pageSize","setPageSize","_useState5","_useState6","errorTotal","setErrorTotal","_useState7","_useState8","errorList","setErrorList","_useState9","_useState10","selectedRowKeys","setSelectedRowKeys","_useSearchParams","useSearchParams","searchParams","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","columns","title","dataIndex","width","render","text","record","onClick","e","key","wordBreak","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","rowSelection","newSelectedRowKeys","initJSErrorList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","appId","result","wrap","_context","prev","next","open","type","abrupt","params","sent","total","forEach","push","errorId","name","msg","stack","createdAt","stop","apply","arguments","useEffect","pagination","showSizeChanger","page","defaultCurrent","Table","marginTop","dataSource","jsErrorInfo","setJsErrorInfo","setOpen","breadcrumbTotal","setBreadcrumbTotal","_useState11","_useState12","breadcrumbList","setBreadcrumbList","breadcrumbColumns","initBreadcrumbList","category","timestamp","_x","onClose","items","getJSError","_ref2","_callee2","res","_context2","_x2","FilterHeader","JSErrorList","Drawer","closable","extra","Space","CloseOutlined","Typography","Title","level","Paragraph","ClockCircleOutlined","Divider","size","Collapse","bordered","defaultActiveKey"],"sourceRoot":""}