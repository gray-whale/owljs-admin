{"version":3,"file":"static/js/4137.8227508a.chunk.js","mappings":"0NAeA,MA2FA,EA3FgBA,KAEZ,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IAClCK,EAASC,IAAcN,EAAAA,EAAAA,UAAqB,KAC5CO,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAsB,KAC7DS,IAAgBC,EAAAA,EAAAA,OAChBC,EAAYC,GAAiBC,EAAAA,GAAQC,aA6BtCC,EAAe,CACjBR,kBACAS,SANoBC,IACpBT,EAAmBS,EAAmB,GAQpCC,EAAcC,UAChB,MAAMC,EAAQX,EAAaY,IAAI,SAC/B,IAAKD,EAKD,YAJAT,EAAWW,KAAK,CACZC,KAAM,QACNC,QAAS,mCAIjB,MAAMC,QC5DaC,ED4Da,CAAE5B,UAASG,WAASmB,SC3DjDO,EAAAA,EAAKN,IAAqB,UAAWK,IADrBA,MD6DnB,GAAID,EAAOG,KAAM,CACbxB,EAAYqB,EAAOG,KAAKC,OACxB,MAAMD,EAAmB,GACzBH,EAAOG,KAAKA,KAAKE,SAAQC,IACrBH,EAAKI,KAAK,CACNC,IAAKF,EAAKG,MACVC,MAAOJ,EAAKI,MACZX,QAASO,EAAKP,QACdY,QAASL,EAAKK,QACdC,WAAYN,EAAKM,YACnB,IAEN/B,EAAWsB,EACf,IAGJU,EAAAA,EAAAA,YAAU,KACNpB,GAAa,GAEd,KAEHoB,EAAAA,EAAAA,YAAU,KACNpB,GAAa,GAEd,CAACpB,EAASG,IAEb,MAAMsC,EAAa,CACfC,iBAAiB,EACjBxB,SAAUA,CAACyB,EAAcxC,KACrBF,EAAW0C,GACXvC,EAAYD,EAAS,EAEzByC,eAAgB5C,EAChB+B,MAAO1B,GAGX,OAAQwC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAM,2BAAMC,SAAA,CAAElC,GAAcmC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,MAAO,CAAEC,UAAW,QAAUnC,aAAcA,EAAcwB,WAAYA,EAAYY,QA9E5F,CACnC,CACIN,MAAO,2BACPO,UAAW,QACXC,MAAO,KAEX,CACIR,MAAO,2BACPO,UAAW,UACXC,MAAO,KAEX,CACIR,MAAO,iCACPO,UAAW,UACXC,MAAO,KAEX,CACIR,MAAO,6CACPO,UAAW,aACXC,MAAO,MA2DsIC,WAAYjD,MAAkB,C","sources":["views/web/custom/log/index.tsx","api/modules/web/log.ts"],"sourcesContent":["import { getLogList } from \"@/api/modules/web/log\";\nimport { Card, message } from \"antd\";\nimport Table, { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\n\ninterface DataType {\n    key: React.Key;\n    level: string;\n    content: string;\n    metrics: string;\n    categories: string;\n}\n\nconst LogList = () => {\n    \n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [logTotal, setLogTotal] = useState(0);\n    const [logList, setLogList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n    const [searchParams] = useSearchParams();\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '日志级别',\n            dataIndex: 'level',\n            width: 100,\n        },\n        {\n            title: '日志内容',\n            dataIndex: 'content',\n            width: 200,\n        },\n        {\n            title: '自定义数值',\n            dataIndex: 'metrics',\n            width: 200,\n        },\n        {\n            title: '事件本身的维度',\n            dataIndex: 'categories',\n            width: 200,\n        },\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initLogList = async () => {\n        const appId = searchParams.get('appId');\n        if (!appId) {\n            messageApi.open({\n                type: 'error',\n                content: 'appId不能为空!',\n            });\n            return;\n        }\n        const result = await getLogList({ pageNum, pageSize,appId });\n        if (result.data) {\n            setLogTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.logId,\n                    level: item.level,\n                    content: item.content,\n                    metrics: item.metrics,\n                    categories: item.categories\n                })\n            });\n            setLogList(data);\n        }\n    };\n\n    useEffect(() => {\n        initLogList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        initLogList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize])\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: logTotal\n    }\n\n    return (<Card title=\"日志列表\">{contextHolder}<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={logList} /></Card>);\n}\n\nexport default LogList;","import { ResLog } from \"@/api/interface/web/log\";\nimport http from \"../../index\"\nimport { ResPage } from \"../../interface\";\nimport { ReqQuery } from \"@/api/interface/web/log\";\n\n// 获取日志列表\nexport const getLogList = (params: ReqQuery) => {\n    return http.get<ResPage<ResLog>>('web/log', params);\n};"],"names":["LogList","pageNum","setPageNum","useState","pageSize","setPageSize","logTotal","setLogTotal","logList","setLogList","selectedRowKeys","setSelectedRowKeys","searchParams","useSearchParams","messageApi","contextHolder","message","useMessage","rowSelection","onChange","newSelectedRowKeys","initLogList","async","appId","get","open","type","content","result","params","http","data","total","forEach","item","push","key","logId","level","metrics","categories","useEffect","pagination","showSizeChanger","page","defaultCurrent","_jsxs","Card","title","children","_jsx","Table","style","marginTop","columns","dataIndex","width","dataSource"],"sourceRoot":""}