{"version":3,"file":"static/js/770.e84d7525.chunk.js","mappings":"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","sources":["components/FilterHeader/index.tsx","views/miniapp/js/dashboard/jsErrorList/index.tsx","api/modules/miniapp/jserror.ts","views/miniapp/js/dashboard/index.tsx"],"sourcesContent":["import { PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Card, DatePicker, Popover, Tag } from \"antd\";\nimport dayjs from 'dayjs';\nimport type { Dayjs } from 'dayjs';\nimport './index.less'\n\nconst { RangePicker } = DatePicker;\n\nconst FilterHeader = ({ data }: any) => {\n\n    const rangePresets: {\n        label: string;\n        value: [Dayjs, Dayjs];\n    }[] = [\n            { label: '最近30分钟', value: [dayjs().add(-30, 'minute'), dayjs()] },\n            { label: '最近1小时', value: [dayjs().add(-1, 'h'), dayjs()] },\n            { label: '最近3小时', value: [dayjs().add(-7, 'h'), dayjs()] },\n            { label: '最近1天', value: [dayjs().add(-1, 'd'), dayjs()] },\n            { label: '最近3天', value: [dayjs().add(-3, 'd'), dayjs()] },\n            { label: '最近7天', value: [dayjs().add(-7, 'd'), dayjs()] },\n            { label: '最近1个月', value: [dayjs().add(-1, 'M'), dayjs()] },\n        ];\n\n    const onRangeChange = (dates: null | (Dayjs | null)[], dateStrings: string[]) => {\n        if (dates) {\n            console.log('From: ', dates[0], ', to: ', dates[1]);\n            console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\n        } else {\n            console.log('Clear');\n        }\n    };\n\n    const tagList = ['pid', '浏览器', '浏览器版本', '系统', '系统版本', '国家/地区', '省份', '城市', 'IP', '品牌', '机型', '页面url', 'session_id', 'view_id', 'env', 'release', 'use_agent', '请求参数', '网络类型', 'use_id', 'device_id'];\n\n    const content = (\n        <div style={{ maxWidth: '400px' }}>\n            {\n                tagList.map(item => { return (<Tag key={item} color=\"blue\" className=\"filter-header-tag\">{item}</Tag>) })\n            }\n        </div>\n    );\n    return (\n        <Card>\n            <RangePicker showTime presets={rangePresets} onChange={onRangeChange} defaultValue={[dayjs().add(-1, 'd'), dayjs()]} />\n\n\n            <Popover placement=\"bottomLeft\" trigger='click' content={content} arrow={false}>\n                <Button icon={<PlusOutlined />} style={{ marginLeft: '8px' }}>筛选条件</Button>\n            </Popover>\n        </Card>\n    );\n};\n\nexport default FilterHeader;","import { getJSErrorList } from \"@/api/modules/miniapp/jserror\";\nimport { Table, message } from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\ninterface DataType {\n    key: React.Key;\n    content: string;\n    time: string;\n    errorCount: number;\n    userCount: number;\n}\n\ntype JSErrorListProps = {\n    onClick: (e: any) => void;\n};\n\nconst JSErrorList: React.FC<JSErrorListProps> = (props: JSErrorListProps) => {\n    const [pageNum, setPageNum] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [errorTotal, setErrorTotal] = useState(0);\n    const [errorList, setErrorList] = useState<DataType[]>([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n    const [searchParams] = useSearchParams();\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const columns: ColumnsType<DataType> = [\n        {\n            title: '错误内容',\n            dataIndex: 'content',\n            width: 200,\n            render: (text) => <div><span onClick={props.onClick} style={{ wordBreak: 'break-all', overflow: 'hidden', textOverflow: 'ellipsis', display: '-webkit-box', WebkitLineClamp: '3', WebkitBoxOrient: 'vertical' }}>{text}</span></div>,\n        },\n        {\n            title: '起止时间',\n            dataIndex: 'time',\n            width: 200,\n        },\n        {\n            title: '错误数',\n            dataIndex: 'errorCount',\n            width: 50,\n        },\n        {\n            title: '影响用户数',\n            dataIndex: 'userCount',\n            width: 50,\n        },\n    ];\n\n    const onSelectChange = (newSelectedRowKeys: React.Key[]) => {\n        setSelectedRowKeys(newSelectedRowKeys);\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const initJSErrorList = async () => {\n        const appId = searchParams.get('appId');\n        if (!appId) {\n            messageApi.open({\n                type: 'error',\n                content: 'appId不能为空!',\n            });\n            return;\n        }\n        const result = await getJSErrorList({ pageNum, pageSize, appId });\n        if (result.data) {\n            setErrorTotal(result.data.total);\n            const data: DataType[] = [];\n            result.data.data.forEach(item => {\n                data.push({\n                    key: item.errorId,\n                    content: item.stack,\n                    time: '2020/12/09',\n                    errorCount: 5,\n                    userCount: 6,\n                })\n            });\n            setErrorList(data);\n        }\n    };\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        initJSErrorList();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pageNum, pageSize])\n\n    const pagination = {\n        showSizeChanger: true,\n        onChange: (page: number, pageSize: number) => {\n            setPageNum(page);\n            setPageSize(pageSize);\n        },\n        defaultCurrent: pageNum,\n        total: errorTotal\n    }\n\n    return (<div>{contextHolder}<Table style={{ marginTop: '12px' }} rowSelection={rowSelection} pagination={pagination} columns={columns} dataSource={errorList} /></div>);\n}\n\nexport default JSErrorList;","import { ReqQuery, ResJSError } from \"@/api/interface/miniapp/jserror\";\nimport http from \"../../index\"\nimport { ResPage } from \"../../interface\";\n\n// 获取错误列表\nexport const getJSErrorList = (params: ReqQuery) => {\n    return http.get<ResPage<ResJSError>>('miniapp/jserror', params);\n};","import FilterHeader from \"@/components/FilterHeader\";\nimport { Card, Drawer, Space } from \"antd\";\nimport { useState } from \"react\";\nimport JSErrorList from \"./jsErrorList\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nconst View: React.FC = () => {\n    const [open, setOpen] = useState(false);\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const showDrawer = () => {\n        setOpen(true);\n      };\n\n    return (<div>\n        <FilterHeader></FilterHeader>\n        <Card title=\"错误列表\" style={{ marginTop: '16px' }}>\n            <JSErrorList onClick={showDrawer}></JSErrorList>\n        </Card>\n        <Drawer\n            title=\"错误详情\"\n            placement='right'\n            closable={false}\n            width='80%'\n            onClose={onClose}\n            open={open}\n            extra={\n                <Space>\n                    <CloseOutlined onClick={onClose} />\n                </Space>\n            }\n        >\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n        </Drawer>\n    </div>);\n}\n\nexport default View;"],"names":["RangePicker","DatePicker","_ref","data","rangePresets","label","value","dayjs","add","content","_jsx","style","maxWidth","children","map","item","Tag","color","className","_jsxs","Card","showTime","presets","onChange","dates","dateStrings","console","log","defaultValue","Popover","placement","trigger","arrow","Button","icon","PlusOutlined","marginLeft","props","_useState","useState","_useState2","_slicedToArray","pageNum","setPageNum","_useState3","_useState4","pageSize","setPageSize","_useState5","_useState6","errorTotal","setErrorTotal","_useState7","_useState8","errorList","setErrorList","_useState9","_useState10","selectedRowKeys","setSelectedRowKeys","_useSearchParams","useSearchParams","searchParams","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","columns","title","dataIndex","width","render","text","onClick","wordBreak","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","rowSelection","newSelectedRowKeys","initJSErrorList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","appId","result","wrap","_context","prev","next","get","open","type","abrupt","params","http","sent","total","forEach","push","key","errorId","stack","time","errorCount","userCount","stop","apply","arguments","useEffect","pagination","showSizeChanger","page","defaultCurrent","Table","marginTop","dataSource","setOpen","onClose","FilterHeader","JSErrorList","Drawer","closable","extra","Space","CloseOutlined"],"sourceRoot":""}